# Starter pipeline    
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- main

# Replace the agent pool name
pool:
  name: myAgentPool

variables:
  # Replace the service connection name as used in the DevOps project settings
  azureServiceConnectionId: 'myServiceConnection'
  
  # Specify the value of the existing Web App name
  webAppName: 'azure-devops-thanh-app'

  # Environment name
  environmentName: 'thanh-env'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.7
  pythonVersion: '3.7'
  
stages:
    - stage: Build
      displayName: Build stage
      jobs:
      - job: Build
        pool: myAgentPool
        steps:    
        - script: |
            python3.7 -m pip install --upgrade pip
            python3.7 -m pip install setup
            python3.7 -m pip install -r requirements.txt
          workingDirectory: $(projectRoot)
          displayName: 'Step 1 install'
        
        - script: |
            export PATH=$HOME/.local/bin:$PATH
            make install
          workingDirectory: $(projectRoot)
          displayName: 'Step 2'
        
        - script: |
            export PATH=$HOME/.local/bin:$PATH
            make install
            make lint
          workingDirectory: $(projectRoot)
          displayName:  'Step 3 - Run lint tests'

        - task: ArchiveFiles@2
          displayName: 'Step 4 - Archive files'
          inputs:
            rootFolderOrFile: '$(projectRoot)'
            includeRootFolder: false
            archiveType: zip
            archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            replaceExistingArchive: true

        - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          displayName: 'Step 5 - Upload package'
          artifact: drop

    - stage: Deploy
      displayName: 'Deploy Web App'
      dependsOn: Build
      condition: succeeded()
      jobs:
      - deployment: DeploymentJob
        pool: myAgentPool
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:
              
              - task: AzureWebApp@1
                displayName: 'Deploy Azure Web App : $(webAppName)'
                inputs:
                  azureSubscription: $(azureServiceConnectionId)
                  appName: $(webAppName)
                  appType: 'webApp'
                  package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip